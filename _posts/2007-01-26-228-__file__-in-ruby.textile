---
layout: post
title: __FILE__  in ruby
---
228
I come across <notextile>__FILE__</notextile> a lot in RoR and I have no clue what it means.  So I did a quick test and this is what I found:

<pre> 
raise(__FILE__) # in home_controller.rb  
#=>  app/controllers/home_controller.rb
</pre>

As it turns out <notextile>__FILE__</notextile>  if the full filename of the file in which the current code is residing and is being executed.

Also you will notice a lot of code like this.

<pre>
if $0 == __FILE__
  # do something
end
</pre>

Variable $0 holds the name of the script that was fired at the command prompt. Let's do a quick test.

<pre>
# ror.rb
puts "$0 is: " + $0
puts "__FILE__ is: " + __FILE__
</pre>

Now execute the above file as "ruby ror.rb". 

<pre>
$0 is: ror.rb
__FILE__ is: ror.rb
</pre>

Now let's see the result in irb.

<pre>
> irb
irb(main):001:0> load 'ror.rb'
$0 is: irb
__FILE__ is: ./ror.rb
=> true
</pre>

The conditional statement $0 == <notextile>__FILE__</notextile> can be used to determine if the file is being invoked directly invoked or is being invoked by some other script.
