---
layout: post
title: JavaScript fundamentals quiz answer
---

Last week I posted a "JavaScript fundamentals quiz":http:// . In this blog I will answer those questions. However first lets go through some JavaScript fundamentals.

h2. Variables hoisting

JavaScript hoists all the variable declaration to the top. Here is an example.

<pre>
var x = 10;
console.log(x);

var y = 10;
console.log(y);
</pre>

JavaScript hoists all the variable declarations all the way at the very top. After the variables are hoisted the code look like this.

<pre>
var x, y;
x = 10;
console.log(x);

y = 10;
console.log(y);
</pre>

If you have a return statement even then variables are hoisted. Consider this case.

<pre>
var fn = function(){
  console.log('testing');
  return true;
  var x = 10;
  console.log(x);
}
</pre>

After the variables are hoisted the code looks like this.

<pre>
var fn = function(){
 var x;
 console.log('testing');
 return true;
 x = 10;
 console.log(x);
}
</pre>

Note that in all the above cases only the variable declaration got hoisted up, not the varible assignment. Variable assignment still happens at the place where variable was declared.

However there is one exception to the rule of varible assignment not getting hoisted up.

<pre>
function test() { 
    bar(); // "I am bar" 
    foo(); // TypeError "foo is not a function" 
    var foo = function () { 
        alert("I am foo"); 
    } 
    function bar() { 
        alert("I am bar"); 
    } 
} 
test();
</pre>

Afte the variable hoisting above code looks like this.

<pre>
function test() { 
  var foo, bar;

  bar = function() { 
    alert("I am bar"); 
  } 

  bar(); // "I am bar" 
  foo(); // TypeError "foo is not a function" 
  var foo = function () { // function expression assigned to local variable 'foo' 
    alert("this won't run!"); 
  } 
} 
test();
</pre>

In the above code not only variable declaration for <tt>bar</tt> got hoisted but also the variable assignment was hoisted. Remember that for <tt>var fn = function(){}</tt> only variable declaration will get hoisted. However for <tt>function fn(){}</tt> both variable declaration and variable assignment will get hoisted.


