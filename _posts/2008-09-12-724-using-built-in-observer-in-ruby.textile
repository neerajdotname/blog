---
layout: post
title: Using built in observer in ruby
---
Developers love to build things. And it is not too difficult to implement the Observer pattern. But why bother. Ruby has built in support. This was the first time I needed to use observer pattern and I was surprised at how easy it is to use. Here is a quick test.

{% highlight ruby %}
require 'observer'

class Animal
  include Observable
  attr_accessor :name
  
  def initialize(input)
    @name = input
  end
  
  def speaks
    changed
    notify_observers(self)
  end
end

dog = Animal.new('dog')

class Watch
  def self.update(obj)
    puts "#{obj.name} spoke"
  end
end

dog.add_observer(Watch)

dog.speaks
{% endhighlight %}
