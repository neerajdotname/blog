---
layout: post
title: Testing tip  use method login_as
---
If you are writing a functional test and you need to be logged in the the api is a bit clunky. Your get request would look something like this. 

Most of the time once a person is logged in then we stored the user.id in session as session[:user_id] = user.id . In order to create a test environment where this person is logged in then you need to write test like this.


{% highlight ruby %}
context "testing get index" do
  setup { get :index, {}, {:user_id => 1} }
  
  should_respond_with :success
  should_render_template :index
end
{% endhighlight %}

This is not pretty. Let's make it pretty.

{% highlight ruby %}
# test_helper.rb
class Test::Unit::TestCase
  def login_as(user)
    @request.session[:user_id] = user ? user.id : nil
  end
end
{% endhighlight %}

Now the test could be written as

{% highlight ruby %}
context "testing get index" do
  setup do
    login_as(user)
    get :index
  end
  should_respond_with :success
  should_render_template :index
end
{% endhighlight %}

Much better. If you need the same person to be logged in all of your test cases then call the login_as method at a higher setup level like this

{% highlight ruby %}
class CitiesControllerTest < ActionController::TestCase

  def setup
    super
    @user = Factory(:user)
    login_as(@user)
  end

  context "testing get index" do
    setup do
      get :index
    end
    should_respond_with :success
    should_render_template :index
  end
  
end
{% endhighlight %}
