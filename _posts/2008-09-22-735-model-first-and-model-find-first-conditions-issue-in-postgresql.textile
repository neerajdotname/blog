---
layout: post
title: Model.first and Model.find( first,  conditions => '') issue in postgresql
---
In rails this is quite common.

<pre>
User.find(:first, :condtions => '')
# SELECT * FROM `users` LIMIT 1

User.first
# SELECT * FROM `users` LIMIT 1
</pre>

Notice the sql that is generated by rails for the above two statements. The sql does not have any 'order by'. It means the application is at the mercy of the database.

And I found out that the default installation for postgresql does not guarantee any order unlike MySQL. It means User.first may not be the first record in postgresql. To get around this issue I have to patch rails and this is what I ended up doing.

<pre>
# User.first doesn't work in postgresql . This is the patch for that fix.
module ActiveRecord 
  class Base
    class << self    
    
        def find_initial(options)
          options.reverse_merge!(:order => 'id asc')
          options.update(:limit => 1)
          find_every(options).first
        end
      
    end
  end
end
</pre>

Now the generate sql looks like below for both the cases.

<pre>
SELECT * FROM `users` ORDER BY id asc LIMIT 1
</pre>
