---
layout: post
title: You need to learn git even if you are using some other version control system
---
Let's say that you are using subversion as the version control system for your application and you don't feel a compelling need to move to git. That is okay. 

However you still need to learn git. Why you ask. Because rails community has embraced git like anything and it has serious consequences.

Two days ago Ryan blogged about the new Rails 2.3 feature called "nested mass assignment":http://ryandaigle.com/articles/2009/2/1/what-s-new-in-edge-rails-nested-attributes .

At the end of the blog he points to "this code":http://github.com/alloy/complex-form-examples/tree/nested_attributes to see a working example.

The code that Ryan pointed to is a fork of complex-form application by Ryan Bates of "Railscasts":http://railscasts.com/ . 

If you look at the branches of the project by alloy you will see that there is a branch called "alloy-nested_params_merged_in_rails":http://github.com/alloy/complex-form-examples/tree/alloy-nested_params_merged_in_rails . If you don't know enough git then how would you get this branch of code on your laptop. Neither Ryan nor alloy put line by line instruction for git newbie.

Problem does not end there. Once you get the branch code to your machine you will find that this code is dependent on "rails":http://github.com/alloy/complex-form-examples/tree/3eda64572d0fdbadc8fbf4c584f27dabbf95b219/vendor which is not packaged along with the application. Rails is marked as a submodule to this project. It means you need to know how git submodule works to get rails. And then this code will work.

You need to do following steps

<pre>
> git clone git://github.com/alloy/complex-form-examples.git
> cd complex-form-examples
> git checkout -b alloy-nested_params_merged_in_rails origin/alloy-nested_params_merged_in_rails
> git submodule init
> git submodule update
> rake db:create
> rake db:migrate
> ruby script/server
</pre>

Without enough git knowledge it could be hard to figure that out. 

Now that you have the application checkout please do go through the code to see how nestes mass-assignment is taking place. This new Rails 2.3 feature absolutely rocks. <br />
