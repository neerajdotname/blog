---
layout: post
title: Enabling gzip on apache to send compressed data
---
This article is part of a series on "Installing a ruby on rails application using phusion passenger on ubuntu on slicehost":http://neeraj.name/blog/articles/736-installing-a-ruby-on-rails-application-using-phusion-passenger-on-ubuntu-on-slicehost .

Browser should receive compressed data from server. I have been running my blog for years and ,all this while, I had not configured apache to send compressed data. Let's fix it.

h2. Determining if server is sending compressed data

First task is to find out if server is sending compressed data or not.

<notextile>
{% highlight sh %}
curl --header 'accept-encoding: gzip' http://www.neeraj.name/blog
{% endhighlight %}
</notextile>

I see plain text. That means data sent by server is not compressed. In contrast try this and you will see garbled text.

{% highlight sh %}
curl  --header 'accept-encoding: gzip' http://stackoverflow.com
{% endhighlight %}


h2. My configuration

All the tricks I am discussing here are tested on my machine which has following configuration.

{% highlight sh %}
> cat /etc/lsb-release
DISTRIB_ID=Ubuntu
DISTRIB_RELEASE=8.04
DISTRIB_CODENAME=hardy
DISTRIB_DESCRIPTION="Ubuntu 8.04.1"
{% endhighlight %}

Apache version

{% highlight sh %}
> apache2 -v
Server version: Apache/2.2.8 (Ubuntu)
Server built:   Jun 25 2008 13:54:43
{% endhighlight %}

h2. mod_deflate

"mod_deflate":http://httpd.apache.org/docs/2.0/mod/mod_deflate.html is an apache module that makes it possible to send compressed data. First task at hand is to find out if apache is loading this module or not.

{% highlight sh %}
> apache2 -l
Compiled in modules:
  core.c
  mod_log_config.c
  mod_logio.c
  prefork.c
  http_core.c
  mod_so.c
{% endhighlight %}

As you can see, current configuration of apache does not load mod_deflate.

I need to find out if deflate is available as a module or not.

{% highlight sh %}
> cd /etc/apache2/
> ls mods-available | grep deflate
deflate.conf
deflate.load
{% endhighlight %}

OK. deflate module is available. I have following lines of code in my <tt>apache2.conf</tt> .

{% highlight sh %}
# Include module configuration:
Include /etc/apache2/mods-enabled/*.load
Include /etc/apache2/mods-enabled/*.conf
{% endhighlight %}

mods_enabled directory is nothing else but symlinks to files in mods_enabled directory.

{% highlight sh %}
> ls -ltr mods-enabled/
total 0
lrwxrwxrwx 1 root root 29 2009-05-31 14:08 status.load -> ../mods-available/status.load
lrwxrwxrwx 1 root root 29 2009-05-31 14:08 status.conf -> ../mods-available/status.conf
{% endhighlight %}

To enable mod_deflate, all I need to do is to put a similar symlink.

{% highlight sh %}
cd mods-enabled
sudo ln -s ../mods-available/deflate.conf deflate.conf
sudo ln -s ../mods-available/deflate.load deflate.load
{% endhighlight %}

Now reload apache configuration

{% highlight sh %}
sudo /etc/init.d/apache2 reload
{% endhighlight %}

Now when I try below mentioned command, I get garbled text. It means I am getting compressed data.

{% highlight sh %}
curl --header 'accept-encoding: gzip' http://www.neeraj.name/blog
{% endhighlight %}

Also try <tt> --compressed</tt> option and you should see <tt>Content-Encoding</tt> as 'gzip'.

{% highlight sh %}
> curl --head --compressed http://www.neeraj.name/blog
HTTP/1.1 200 OK
Date: Thu, 27 Aug 2009 00:39:38 GMT
Server: Apache/2.2.8 (Ubuntu) Phusion_Passenger/2.2.4
Last-Modified: Thu, 27 Aug 2009 00:29:18 GMT
ETag: "c0a84-569a-47214a8751380"-gzip
Accept-Ranges: bytes
Vary: Accept-Encoding
Content-Encoding: gzip
Content-Length: 6524
Content-Type: text/html
{% endhighlight %}

h2. Server configuration

Although you are getting compressed output and apache recommends that you explicitly put directive to compress the output. I am using vhost and this is what a typical vhost for me looks like

{% highlight sh %}
<VirtualHost xx.xx.xx.xx:80>
  ServerName xxxx
  ServerAlias xxxxx
  DocumentRoot /home/xxx/current/public
  <Directory "/home/xxxx/current/public">
        Options FollowSymLinks
        AllowOverride None
        Order allow,deny
        Allow from all
  </Directory>
</VirtualHost>
{% endhighlight %}

After adding the location tag "as per apache guidelines":http://httpd.apache.org/docs/2.2/mod/mod_deflate.html , it looks like this

{% highlight sh %}
<VirtualHost xx.xx.xx.xx:80>
  ServerName xxxx
  ServerAlias xxxxx
  DocumentRoot /home/xxx/current/public
  <Directory "/home/xxxx/current/public">
        Options FollowSymLinks
        AllowOverride None
        Order allow,deny
        Allow from all
  </Directory>
  <Location />
    # Insert filter
    SetOutputFilter DEFLATE

    # Netscape 4.x has some problems...
    BrowserMatch ^Mozilla/4 gzip-only-text/html

    # Netscape 4.06-4.08 have some more problems
    BrowserMatch ^Mozilla/4\.0[678] no-gzip

    # MSIE masquerades as Netscape, but it is fine
    BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
    # Don't compress images
SetEnvIfNoCase Request_URI \
\.(?:gif|jpe?g|png)$ no-gzip dont-vary

# Make sure proxies don't deliver the wrong content
Header append Vary User-Agent env=!dont-vary

  </Location> 
</VirtualHost>
{% endhighlight %}

Reload apache.

{% highlight sh %}
sudo /etc/init.d/apache2 reload
{% endhighlight %}

I got following error.

{% highlight sh %}
Invalid command 'Header', perhaps misspelled or defined by a module not included in the server configuration
   ...fail!
{% endhighlight %}

That is because headers module is missing. Fixing that is easy.

{% highlight sh %}
cd mods-enabled
sudo ln -s ../mods-available/headers.load headers.load
{% endhighlight %}

Now reload apache and it works fine.<br />
